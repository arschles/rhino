#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift/struct'
require 'thrift/types'

module Apache
  module Hadoop
    module Hbase
      module Thrift
        class TCell
          include ::Thrift::Struct
          attr_accessor :value, :timestamp
          FIELDS = {
            1 => {:type => ::Thrift::Types::STRING, :name => 'value'},
            2 => {:type => ::Thrift::Types::I64, :name => 'timestamp'}
          }
        end

        class ColumnDescriptor
          include ::Thrift::Struct
          attr_accessor :name, :maxVersions, :compression, :inMemory, :maxValueLength, :bloomFilterType, :bloomFilterVectorSize, :bloomFilterNbHashes, :blockCacheEnabled, :timeToLive
          FIELDS = {
            1 => {:type => ::Thrift::Types::STRING, :name => 'name'},
            2 => {:type => ::Thrift::Types::I32, :name => 'maxVersions', :default => 3},
            3 => {:type => ::Thrift::Types::STRING, :name => 'compression', :default => 'NONE'},
            4 => {:type => ::Thrift::Types::BOOL, :name => 'inMemory', :default => false},
            5 => {:type => ::Thrift::Types::I32, :name => 'maxValueLength', :default => 2147483647},
            6 => {:type => ::Thrift::Types::STRING, :name => 'bloomFilterType', :default => 'NONE'},
            7 => {:type => ::Thrift::Types::I32, :name => 'bloomFilterVectorSize', :default => 0},
            8 => {:type => ::Thrift::Types::I32, :name => 'bloomFilterNbHashes', :default => 0},
            9 => {:type => ::Thrift::Types::BOOL, :name => 'blockCacheEnabled', :default => false},
            10 => {:type => ::Thrift::Types::I32, :name => 'timeToLive', :default => -1}
          }
        end

        class TRegionInfo
          include ::Thrift::Struct
          attr_accessor :startKey, :endKey, :id, :name, :version
          FIELDS = {
            1 => {:type => ::Thrift::Types::STRING, :name => 'startKey'},
            2 => {:type => ::Thrift::Types::STRING, :name => 'endKey'},
            3 => {:type => ::Thrift::Types::I64, :name => 'id'},
            4 => {:type => ::Thrift::Types::STRING, :name => 'name'},
            5 => {:type => ::Thrift::Types::BYTE, :name => 'version'}
          }
        end

        class Mutation
          include ::Thrift::Struct
          attr_accessor :isDelete, :column, :value
          FIELDS = {
            1 => {:type => ::Thrift::Types::BOOL, :name => 'isDelete', :default => false},
            2 => {:type => ::Thrift::Types::STRING, :name => 'column'},
            3 => {:type => ::Thrift::Types::STRING, :name => 'value'}
          }
        end

        class BatchMutation
          include ::Thrift::Struct
          attr_accessor :row, :mutations
          FIELDS = {
            1 => {:type => ::Thrift::Types::STRING, :name => 'row'},
            2 => {:type => ::Thrift::Types::LIST, :name => 'mutations', :element => {:type => ::Thrift::Types::STRUCT, :class => Mutation}}
          }
        end

        class TRowResult
          include ::Thrift::Struct
          attr_accessor :row, :columns
          FIELDS = {
            1 => {:type => ::Thrift::Types::STRING, :name => 'row'},
            2 => {:type => ::Thrift::Types::MAP, :name => 'columns', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRUCT, :class => TCell}}
          }
        end

        class IOError < StandardError
          include ::Thrift::Struct
          def initialize(message=nil)
            super()
            self.message = message
          end

          attr_accessor :message
          FIELDS = {
            1 => {:type => ::Thrift::Types::STRING, :name => 'message'}
          }
        end

        class IllegalArgument < StandardError
          include ::Thrift::Struct
          def initialize(message=nil)
            super()
            self.message = message
          end

          attr_accessor :message
          FIELDS = {
            1 => {:type => ::Thrift::Types::STRING, :name => 'message'}
          }
        end

        class NotFound < StandardError
          include ::Thrift::Struct
          def initialize(message=nil)
            super()
            self.message = message
          end

          attr_accessor :message
          FIELDS = {
            1 => {:type => ::Thrift::Types::STRING, :name => 'message'}
          }
        end

        class AlreadyExists < StandardError
          include ::Thrift::Struct
          def initialize(message=nil)
            super()
            self.message = message
          end

          attr_accessor :message
          FIELDS = {
            1 => {:type => ::Thrift::Types::STRING, :name => 'message'}
          }
        end

      end
    end
  end
end
